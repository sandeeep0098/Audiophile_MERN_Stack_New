"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[categories]/[slug]/page",{

/***/ "(app-client)/./src/store/cart-slice.ts":
/*!*********************************!*\
  !*** ./src/store/cart-slice.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartActions: function() { return /* binding */ cartActions; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-client)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nconst cartSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"cart\",\n    initialState: {\n        products: [],\n        totalQuantity: 0,\n        totalAmount: 0\n    },\n    reducers: {\n        addProductToCart (state, action) {\n            const newProduct = action.payload;\n            const existingProduct = state.products.find((product)=>product._id === newProduct._id);\n            if (existingProduct) {\n                // If the product with the same id already exists, increase its quantity and total price\n                existingProduct.quantity += newProduct.quantity;\n                existingProduct.totalPrice += newProduct.price * newProduct.quantity;\n            } else {\n                // If the product is new, add it to the cart\n                state.products.push({\n                    _id: newProduct._id,\n                    slug: newProduct.slug,\n                    name: newProduct.name,\n                    image: newProduct.image,\n                    price: newProduct.price,\n                    quantity: newProduct.quantity,\n                    totalPrice: newProduct.price * newProduct.quantity\n                });\n            }\n            // Calculate total quantity and total amount for the cart\n            state.totalQuantity += newProduct.quantity;\n            state.totalAmount += newProduct.price * newProduct.quantity;\n        },\n        removeProductFromCart (state, action) {\n            const id = action.payload;\n            const existingProduct = state.products.find((product)=>product._id === id);\n            if (existingProduct) {\n                const removedQuantity = existingProduct.quantity;\n                state.totalQuantity -= removedQuantity;\n                state.totalAmount -= existingProduct.price * removedQuantity;\n                // Remove the product\n                state.products = state.products.filter((product)=>product._id !== id);\n            }\n        },\n        removeAllProducts (state) {\n            state.products = [];\n            state.totalQuantity = 0;\n            state.totalAmount = 0;\n        }\n    }\n});\nconst cartActions = cartSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (cartSlice);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vc3JjL3N0b3JlL2NhcnQtc2xpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFFL0MsTUFBTUMsWUFBWUQsNkRBQVdBLENBQUM7SUFDNUJFLE1BQU07SUFDTkMsY0FBYztRQUNaQyxVQUFVLEVBQUU7UUFDWkMsZUFBZTtRQUNmQyxhQUFhO0lBQ2Y7SUFDQUMsVUFBVTtRQUNSQyxrQkFBaUJDLEtBQUssRUFBRUMsTUFBTTtZQUM1QixNQUFNQyxhQUFhRCxPQUFPRSxPQUFPO1lBQ2pDLE1BQU1DLGtCQUFrQkosTUFBTUwsUUFBUSxDQUFDVSxJQUFJLENBQ3pDLENBQUNDLFVBQVlBLFFBQVFDLEdBQUcsS0FBS0wsV0FBV0ssR0FBRztZQUc3QyxJQUFJSCxpQkFBaUI7Z0JBQ25CLHdGQUF3RjtnQkFDeEZBLGdCQUFnQkksUUFBUSxJQUFJTixXQUFXTSxRQUFRO2dCQUMvQ0osZ0JBQWdCSyxVQUFVLElBQUlQLFdBQVdRLEtBQUssR0FBR1IsV0FBV00sUUFBUTtZQUN0RSxPQUFPO2dCQUNMLDRDQUE0QztnQkFDNUNSLE1BQU1MLFFBQVEsQ0FBQ2dCLElBQUksQ0FBQztvQkFDbEJKLEtBQUtMLFdBQVdLLEdBQUc7b0JBQ25CSyxNQUFNVixXQUFXVSxJQUFJO29CQUNyQm5CLE1BQU1TLFdBQVdULElBQUk7b0JBQ3JCb0IsT0FBT1gsV0FBV1csS0FBSztvQkFDdkJILE9BQU9SLFdBQVdRLEtBQUs7b0JBQ3ZCRixVQUFVTixXQUFXTSxRQUFRO29CQUM3QkMsWUFBWVAsV0FBV1EsS0FBSyxHQUFHUixXQUFXTSxRQUFRO2dCQUNwRDtZQUNGO1lBRUEseURBQXlEO1lBQ3pEUixNQUFNSixhQUFhLElBQUlNLFdBQVdNLFFBQVE7WUFDMUNSLE1BQU1ILFdBQVcsSUFBSUssV0FBV1EsS0FBSyxHQUFHUixXQUFXTSxRQUFRO1FBQzdEO1FBQ0FNLHVCQUFzQmQsS0FBSyxFQUFFQyxNQUFNO1lBQ2pDLE1BQU1jLEtBQUtkLE9BQU9FLE9BQU87WUFDekIsTUFBTUMsa0JBQWtCSixNQUFNTCxRQUFRLENBQUNVLElBQUksQ0FDekMsQ0FBQ0MsVUFBWUEsUUFBUUMsR0FBRyxLQUFLUTtZQUcvQixJQUFJWCxpQkFBaUI7Z0JBQ25CLE1BQU1ZLGtCQUFrQlosZ0JBQWdCSSxRQUFRO2dCQUNoRFIsTUFBTUosYUFBYSxJQUFJb0I7Z0JBQ3ZCaEIsTUFBTUgsV0FBVyxJQUFJTyxnQkFBZ0JNLEtBQUssR0FBR007Z0JBRTdDLHFCQUFxQjtnQkFDckJoQixNQUFNTCxRQUFRLEdBQUdLLE1BQU1MLFFBQVEsQ0FBQ3NCLE1BQU0sQ0FBQyxDQUFDWCxVQUFZQSxRQUFRQyxHQUFHLEtBQUtRO1lBQ3RFO1FBQ0Y7UUFDQUcsbUJBQWtCbEIsS0FBSztZQUNyQkEsTUFBTUwsUUFBUSxHQUFHLEVBQUU7WUFDbkJLLE1BQU1KLGFBQWEsR0FBRztZQUN0QkksTUFBTUgsV0FBVyxHQUFHO1FBQ3RCO0lBQ0Y7QUFDRjtBQUVPLE1BQU1zQixjQUFjM0IsVUFBVTRCLE9BQU8sQ0FBQztBQUM3QywrREFBZTVCLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3N0b3JlL2NhcnQtc2xpY2UudHM/OTI2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuXG5jb25zdCBjYXJ0U2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6ICdjYXJ0JyxcbiAgaW5pdGlhbFN0YXRlOiB7XG4gICAgcHJvZHVjdHM6IFtdLFxuICAgIHRvdGFsUXVhbnRpdHk6IDAsXG4gICAgdG90YWxBbW91bnQ6IDAsXG4gIH0sXG4gIHJlZHVjZXJzOiB7XG4gICAgYWRkUHJvZHVjdFRvQ2FydChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICBjb25zdCBuZXdQcm9kdWN0ID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICBjb25zdCBleGlzdGluZ1Byb2R1Y3QgPSBzdGF0ZS5wcm9kdWN0cy5maW5kKFxuICAgICAgICAocHJvZHVjdCkgPT4gcHJvZHVjdC5faWQgPT09IG5ld1Byb2R1Y3QuX2lkXG4gICAgICApO1xuXG4gICAgICBpZiAoZXhpc3RpbmdQcm9kdWN0KSB7XG4gICAgICAgIC8vIElmIHRoZSBwcm9kdWN0IHdpdGggdGhlIHNhbWUgaWQgYWxyZWFkeSBleGlzdHMsIGluY3JlYXNlIGl0cyBxdWFudGl0eSBhbmQgdG90YWwgcHJpY2VcbiAgICAgICAgZXhpc3RpbmdQcm9kdWN0LnF1YW50aXR5ICs9IG5ld1Byb2R1Y3QucXVhbnRpdHk7XG4gICAgICAgIGV4aXN0aW5nUHJvZHVjdC50b3RhbFByaWNlICs9IG5ld1Byb2R1Y3QucHJpY2UgKiBuZXdQcm9kdWN0LnF1YW50aXR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSWYgdGhlIHByb2R1Y3QgaXMgbmV3LCBhZGQgaXQgdG8gdGhlIGNhcnRcbiAgICAgICAgc3RhdGUucHJvZHVjdHMucHVzaCh7XG4gICAgICAgICAgX2lkOiBuZXdQcm9kdWN0Ll9pZCxcbiAgICAgICAgICBzbHVnOiBuZXdQcm9kdWN0LnNsdWcsXG4gICAgICAgICAgbmFtZTogbmV3UHJvZHVjdC5uYW1lLFxuICAgICAgICAgIGltYWdlOiBuZXdQcm9kdWN0LmltYWdlLFxuICAgICAgICAgIHByaWNlOiBuZXdQcm9kdWN0LnByaWNlLFxuICAgICAgICAgIHF1YW50aXR5OiBuZXdQcm9kdWN0LnF1YW50aXR5LFxuICAgICAgICAgIHRvdGFsUHJpY2U6IG5ld1Byb2R1Y3QucHJpY2UgKiBuZXdQcm9kdWN0LnF1YW50aXR5LFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2FsY3VsYXRlIHRvdGFsIHF1YW50aXR5IGFuZCB0b3RhbCBhbW91bnQgZm9yIHRoZSBjYXJ0XG4gICAgICBzdGF0ZS50b3RhbFF1YW50aXR5ICs9IG5ld1Byb2R1Y3QucXVhbnRpdHk7XG4gICAgICBzdGF0ZS50b3RhbEFtb3VudCArPSBuZXdQcm9kdWN0LnByaWNlICogbmV3UHJvZHVjdC5xdWFudGl0eTtcbiAgICB9LFxuICAgIHJlbW92ZVByb2R1Y3RGcm9tQ2FydChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICBjb25zdCBpZCA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgY29uc3QgZXhpc3RpbmdQcm9kdWN0ID0gc3RhdGUucHJvZHVjdHMuZmluZChcbiAgICAgICAgKHByb2R1Y3QpID0+IHByb2R1Y3QuX2lkID09PSBpZFxuICAgICAgKTtcblxuICAgICAgaWYgKGV4aXN0aW5nUHJvZHVjdCkge1xuICAgICAgICBjb25zdCByZW1vdmVkUXVhbnRpdHkgPSBleGlzdGluZ1Byb2R1Y3QucXVhbnRpdHk7XG4gICAgICAgIHN0YXRlLnRvdGFsUXVhbnRpdHkgLT0gcmVtb3ZlZFF1YW50aXR5O1xuICAgICAgICBzdGF0ZS50b3RhbEFtb3VudCAtPSBleGlzdGluZ1Byb2R1Y3QucHJpY2UgKiByZW1vdmVkUXVhbnRpdHk7XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBwcm9kdWN0XG4gICAgICAgIHN0YXRlLnByb2R1Y3RzID0gc3RhdGUucHJvZHVjdHMuZmlsdGVyKChwcm9kdWN0KSA9PiBwcm9kdWN0Ll9pZCAhPT0gaWQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVtb3ZlQWxsUHJvZHVjdHMoc3RhdGUpIHtcbiAgICAgIHN0YXRlLnByb2R1Y3RzID0gW107XG4gICAgICBzdGF0ZS50b3RhbFF1YW50aXR5ID0gMDtcbiAgICAgIHN0YXRlLnRvdGFsQW1vdW50ID0gMDtcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBjYXJ0QWN0aW9ucyA9IGNhcnRTbGljZS5hY3Rpb25zO1xuZXhwb3J0IGRlZmF1bHQgY2FydFNsaWNlO1xuIl0sIm5hbWVzIjpbImNyZWF0ZVNsaWNlIiwiY2FydFNsaWNlIiwibmFtZSIsImluaXRpYWxTdGF0ZSIsInByb2R1Y3RzIiwidG90YWxRdWFudGl0eSIsInRvdGFsQW1vdW50IiwicmVkdWNlcnMiLCJhZGRQcm9kdWN0VG9DYXJ0Iiwic3RhdGUiLCJhY3Rpb24iLCJuZXdQcm9kdWN0IiwicGF5bG9hZCIsImV4aXN0aW5nUHJvZHVjdCIsImZpbmQiLCJwcm9kdWN0IiwiX2lkIiwicXVhbnRpdHkiLCJ0b3RhbFByaWNlIiwicHJpY2UiLCJwdXNoIiwic2x1ZyIsImltYWdlIiwicmVtb3ZlUHJvZHVjdEZyb21DYXJ0IiwiaWQiLCJyZW1vdmVkUXVhbnRpdHkiLCJmaWx0ZXIiLCJyZW1vdmVBbGxQcm9kdWN0cyIsImNhcnRBY3Rpb25zIiwiYWN0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./src/store/cart-slice.ts\n"));

/***/ })

});